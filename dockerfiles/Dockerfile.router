FROM --platform=linux/arm64 debian:bullseye-slim as build

ARG ROUTER_RELEASE=v1.1.0

WORKDIR /dist

# Install curl
RUN \
  apt-get update -y \
  && apt-get install -y \
    curl \
  && rm -rf /var/lib/apt/lists/*

# Make directories for config and schema
RUN mkdir config schema

# Run the Router downloader which puts Router into current working directory
RUN curl -sSL -O https://github.com/apollographql/router/releases/download/$ROUTER_RELEASE/router-$ROUTER_RELEASE-aarch64-unknown-linux-gnu.tar.gz \
&& tar xf router-$ROUTER_RELEASE-aarch64-unknown-linux-gnu.tar.gz \
&& mv dist/router . \
&& chmod +x router

# Copy configuration for docker image
COPY dockerfiles/router.yaml config

# Required so we can copy in libz.so.1
FROM --platform=linux/arm64 gcr.io/distroless/java17-debian11:nonroot-arm64 as libz-required

FROM --platform=linux/arm64 debian:bullseye-slim as final

RUN apt-get -y update \
    && apt-get -y install ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Copy in the extracted/created files
COPY --from=libz-required /lib/aarch64-linux-gnu/libz.so.1 /lib/aarch64-linux-gnu/libz.so.1

WORKDIR /dist

COPY --from=build --chown=root:root /dist .

# Copy configuration for docker image
COPY dockerfiles/router.yaml config

ENV APOLLO_ROUTER_CONFIG_PATH="/dist/config/router.yaml"

# Default executable is the router
ENTRYPOINT ["/dist/router"]
